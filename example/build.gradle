import ru.d10xa.geb.GebTask
import ru.d10xa.geb.GebEnvironmentTask

// Uncomment "mavenLocal()" and "classpath "ru.d10xa...-SNAPSHOT" for development
// For example:
// ./gradlew clean build -x test publishToMavenLocal && ./gradlew -p example chromeTest

buildscript {
    repositories {
        // mavenLocal()
        jcenter()
        maven { url 'https://dl.bintray.com/d10xa/maven' }
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "ru.d10xa:gradle-geb-plugin:2.0.0-SNAPSHOT"
        classpath "ru.d10xa:gradle-allure-plugin:0.5.2"
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

apply plugin: 'groovy'
apply plugin: 'ru.d10xa.geb'
apply plugin: 'ru.d10xa.allure'

allure {
    spock = true
    geb = true
}

tasks.withType(Test)*.finalizedBy allureReport

repositories {
    jcenter()
}

dependencies {
    testCompile "org.codehaus.groovy:groovy-all:2.4.7"
}

geb {
    chromeDriverVersion = "2.22"
    gebVersion = '0.13.1'
    seleniumVersion = '2.53.1'
    gebEnv = 'firefox'
    dockerStandaloneChromeVersion = '2.53.0'
}

task wikipedia(type: GebTask)

wikipedia << {
    drive {
        go 'https://ya.ru/'
        $('#text') << 'wikipedia'

        waitFor {
            $('span', text: contains('ru.wikipedia.org'))
        }.click()

        sleep(2000)
    }
}

task serverStart << {
    def serverFactory = new SimpleHttpFileServerFactory()
    def server = serverFactory.start(file("$projectDir/site"), 0)
    ext.server = server
}

tasks.withType(GebEnvironmentTask)*.dependsOn 'serverStart'
test.dependsOn 'serverStart'

test {
    doFirst {
        systemProperty "gradleServerPort", serverStart.server.port
    }
}

task serverStop << {
    serverStart.server.stop()
}

serverStart.finalizedBy 'serverStop'
test.finalizedBy 'serverStop'

task myCustomRemoteFirefoxTest(type: GebEnvironmentTask) {
    gebEnv = "my_custom_remote_firefox"
    seleniumPort = 5555
}
